definitions:
  controller.LoginRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controller.LoginResponse:
    properties:
      accessToken:
        type: string
      accessTokenExpiresIn:
        type: string
      refreshToken:
        type: string
      refreshTokenExpiresIn:
        type: string
      sessionID:
        type: string
    type: object
  controller.RefreshTokenResponse:
    properties:
      accessToken:
        type: string
      accessTokenExpiresIn:
        type: string
      refreshToken:
        type: string
      refreshTokenExpiresIn:
        type: string
    type: object
  controller.RegisterRequest:
    properties:
      password:
        minLength: 6
        type: string
      user_email:
        type: string
      user_fullname:
        type: string
      user_role:
        type: string
      username:
        type: string
      year:
        type: integer
    required:
    - password
    - user_email
    - user_fullname
    - user_role
    - username
    - year
    type: object
  course.CreateCourseRequest:
    properties:
      course_credit:
        maximum: 12
        minimum: 1
        type: integer
      course_day:
        allOf:
        - $ref: '#/definitions/sqlc.Day'
        enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      course_department:
        type: string
      course_end_shift:
        maximum: 10
        minimum: 1
        type: integer
      course_fullname:
        maxLength: 200
        minLength: 5
        type: string
      course_name:
        maxLength: 100
        minLength: 3
        type: string
      course_room:
        maxLength: 50
        minLength: 2
        type: string
      course_semester:
        enum:
        - 1
        - 2
        - 3
        type: integer
      course_start_shift:
        maximum: 10
        minimum: 1
        type: integer
      course_teacher_id:
        type: string
      course_year:
        maximum: 2100
        minimum: 2000
        type: integer
      current_enroll:
        maximum: 1000
        minimum: 0
        type: integer
      max_enroll:
        maximum: 1000
        minimum: 1
        type: integer
    required:
    - course_credit
    - course_day
    - course_department
    - course_end_shift
    - course_fullname
    - course_name
    - course_room
    - course_semester
    - course_start_shift
    - course_teacher_id
    - course_year
    - max_enroll
    type: object
  model.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
  sqlc.Day:
    enum:
    - monday
    - tuesday
    - wednesday
    - thursday
    - friday
    - saturday
    - sunday
    type: string
    x-enum-varnames:
    - DayMonday
    - DayTuesday
    - DayWednesday
    - DayThursday
    - DayFriday
    - DaySaturday
    - DaySunday
  user.ChangePassRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
info:
  contact: {}
paths:
  /course/create:
    post:
      consumes:
      - application/json
      description: Create course
      parameters:
      - description: CreateCourseRequest
        in: body
        name: CreateCourseRequest
        required: true
        schema:
          $ref: '#/definitions/course.CreateCourseRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create course
      tags:
      - Course
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: LoginRequest
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Login user
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Logout user
      tags:
      - Auth
  /refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Refresh token
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: RegisterRequest
        in: body
        name: RegisterRequest
        required: true
        schema:
          $ref: '#/definitions/controller.RegisterRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Register user
      tags:
      - Auth
  /user/change-pass:
    post:
      consumes:
      - application/json
      description: Change password
      parameters:
      - description: ChangePassRequest
        in: body
        name: ChangePassRequest
        required: true
        schema:
          $ref: '#/definitions/user.ChangePassRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Change password
      tags:
      - User
  /user/info:
    post:
      consumes:
      - application/json
      description: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get user info
      tags:
      - User
swagger: "2.0"
