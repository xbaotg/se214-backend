definitions:
  controller.LoginRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controller.LoginResponse:
    properties:
      accessToken:
        type: string
      accessTokenExpiresIn:
        type: string
      refreshToken:
        type: string
      refreshTokenExpiresIn:
        type: string
      sessionID:
        type: string
    type: object
  controller.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  controller.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  controller.RefreshTokenResponse:
    properties:
      accessToken:
        type: string
      accessTokenExpiresIn:
        type: string
      refreshToken:
        type: string
      refreshTokenExpiresIn:
        type: string
    type: object
  controller.RegisterRequest:
    properties:
      password:
        minLength: 6
        type: string
      user_email:
        type: string
      user_fullname:
        type: string
      user_role:
        type: string
      username:
        type: string
      year:
        type: integer
    required:
    - password
    - user_email
    - user_fullname
    - user_role
    - username
    - year
    type: object
  controller.UserInfoRequest:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
  model.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: LoginRequest
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Login user
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout user
      parameters:
      - description: LogoutRequest
        in: body
        name: LogoutRequest
        required: true
        schema:
          $ref: '#/definitions/controller.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Logout user
      tags:
      - Auth
  /refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh token
      parameters:
      - description: RefreshTokenRequest
        in: body
        name: RefreshTokenRequest
        required: true
        schema:
          $ref: '#/definitions/controller.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Refresh token
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: RegisterRequest
        in: body
        name: RegisterRequest
        required: true
        schema:
          $ref: '#/definitions/controller.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Register user
      tags:
      - Auth
  /user-info:
    post:
      consumes:
      - application/json
      description: Get user info
      parameters:
      - description: UserInfoRequest
        in: body
        name: UserInfoRequest
        required: true
        schema:
          $ref: '#/definitions/controller.UserInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get user info
      tags:
      - User
swagger: "2.0"
